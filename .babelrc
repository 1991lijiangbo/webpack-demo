{
  "presets": [
        [
            "@babel/preset-env",{
                "useBuiltIns":"usage",
                "targets": {
                    //表示项目在打包后运行在以下版本浏览器,比如谷歌版本大于67，浏览器对ES6语法兼容较好，不会再做转义了
                    "edge": "17",
                    "firefox": "60",
                    "chrome": "67",
                    "safari": "11.1"
                },
                "corejs": 2
                /** 当有设置时，指定的目录将用来缓存 loader 的执行结果。之后的 webpack 构建，将会尝试读取缓存，
                来避免在每次执行时，可能产生的、高性能消耗的 Babel 重新编译过程(recompilation process)。
                如果设置了一个空值 (loader: 'babel-loader?cacheDirectory') 或者 true (loader: 'babel-loader?cacheDirectory=true')，loader 将使用默认的缓存目录 node_modules/.cache/babel-loader，
                如果在任何根目录下都没有找到 node_modules 目录，将会降级回退到操作系统默认的临时文件目录。此配置将提升babel-loader的速度*/
               
            }
        ]
    ],
    "plugins": ["@babel/plugin-syntax-dynamic-import"]
}